#------------------------------------------------------------------------------
#
#  WARNING !
#
#  This is a generated file. DO NOT EDIT THIS FILE! Your changes will
#  be lost the next time this file is regenerated.
#
#  This file was generated using asterisk-ari-client ruby gem.
#
#------------------------------------------------------------------------------

module Ari
  class RTPstat < Model

    attr_reader :txcount, :rxcount, :txjitter, :rxjitter, :remote_maxjitter, :remote_minjitter, :remote_normdevjitter, :remote_stdevjitter, :local_maxjitter, :local_minjitter, :local_normdevjitter, :local_stdevjitter, :txploss, :rxploss, :remote_maxrxploss, :remote_minrxploss, :remote_normdevrxploss, :remote_stdevrxploss, :local_maxrxploss, :local_minrxploss, :local_normdevrxploss, :local_stdevrxploss, :rtt, :maxrtt, :minrtt, :normdevrtt, :stdevrtt, :local_ssrc, :remote_ssrc, :txoctetcount, :rxoctetcount, :channel_uniqueid

    def txjitter=(val)
      @txjitter ||= double.new(val)
    end

    def rxjitter=(val)
      @rxjitter ||= double.new(val)
    end

    def remote_maxjitter=(val)
      @remote_maxjitter ||= double.new(val)
    end

    def remote_minjitter=(val)
      @remote_minjitter ||= double.new(val)
    end

    def remote_normdevjitter=(val)
      @remote_normdevjitter ||= double.new(val)
    end

    def remote_stdevjitter=(val)
      @remote_stdevjitter ||= double.new(val)
    end

    def local_maxjitter=(val)
      @local_maxjitter ||= double.new(val)
    end

    def local_minjitter=(val)
      @local_minjitter ||= double.new(val)
    end

    def local_normdevjitter=(val)
      @local_normdevjitter ||= double.new(val)
    end

    def local_stdevjitter=(val)
      @local_stdevjitter ||= double.new(val)
    end

    def remote_maxrxploss=(val)
      @remote_maxrxploss ||= double.new(val)
    end

    def remote_minrxploss=(val)
      @remote_minrxploss ||= double.new(val)
    end

    def remote_normdevrxploss=(val)
      @remote_normdevrxploss ||= double.new(val)
    end

    def remote_stdevrxploss=(val)
      @remote_stdevrxploss ||= double.new(val)
    end

    def local_maxrxploss=(val)
      @local_maxrxploss ||= double.new(val)
    end

    def local_minrxploss=(val)
      @local_minrxploss ||= double.new(val)
    end

    def local_normdevrxploss=(val)
      @local_normdevrxploss ||= double.new(val)
    end

    def local_stdevrxploss=(val)
      @local_stdevrxploss ||= double.new(val)
    end

    def rtt=(val)
      @rtt ||= double.new(val)
    end

    def maxrtt=(val)
      @maxrtt ||= double.new(val)
    end

    def minrtt=(val)
      @minrtt ||= double.new(val)
    end

    def normdevrtt=(val)
      @normdevrtt ||= double.new(val)
    end

    def stdevrtt=(val)
      @stdevrtt ||= double.new(val)
    end


  end
end
